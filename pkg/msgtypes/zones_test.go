package msgtypes

import (
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestZonesSerialize(t *testing.T) {
	tests := []struct {
		name string
		m    *ZoneSelect
		b    []byte
	}{
		{
			name: "Three Zones",
			m: &ZoneSelect{
				R10_HEAD,
				R10_RING,
				R10_LOGO,
			},
			b: []byte{
				// Zone Select Header
				0x03, 0x23, 0x01, 0x00,
				// Zone Selection
				0x03, 0x00, 0x01, 0x03,
				// Padding
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00,
			},
		},
		{
			name: "Two Zones",
			m: &ZoneSelect{
				R10_HEAD,
				R10_RING,
			},
			b: []byte{
				// Zone Select Header
				0x03, 0x23, 0x01, 0x00,
				// Zone Selection
				0x02, 0x00, 0x01,
				// Padding
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00,
			},
		},
		{
			name: "One Zone",
			m: &ZoneSelect{
				R10_LOGO,
			},
			b: []byte{
				// Zone Select Header
				0x03, 0x23, 0x01, 0x00,
				// Zone Selection
				0x01, 0x03,
				// Padding
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00,
			},
		},
		{
			name: "No Zones",
			m:    &ZoneSelect{},
			b: []byte{
				// Zone Select Header
				0x03, 0x23, 0x01, 0x00,
				// Zone Selection
				0x00,
				// Padding
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00,
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			b := tt.m.Serialize()
			if diff := cmp.Diff(tt.b, b); diff != "" {
				t.Fatalf("Failed test \"%s\" (-want +got):\n%s", tt.name, diff)
			}
		})
	}
}
